#!/usr/bin/env node
var sys = require('sys'),
  path = require('path'),
  fs = require('fs'),
  spawn = require('child_process').spawn,
  argv = require('optimist')
    .default('c', './cable')
    .argv

var home = process.env.HOME

// if HOME not set, die
if (home == undefined) {

  console.log('Error: HOME environmental variable not defined.')
  process.exit()
}

var dejaHome = home + '/.deja'

// make sure ~/.deja exists
try {
  fs.mkdirSync(dejaHome, 0700)
} catch(e) {}

if (argv['_'].length < 1 || argv['_'].length > 2) {

  console.log('Wrong number of args.')
}
else if(argv['_'].length == 2) {

  var command = argv['_'][0]
  var param = argv['_'][1]

  if (command == 'clone') {

    cloneRepo(home, dejaHome, param)
  }
}
else {


}

function cloneRepo(home, dejaHome, repo) {

  var basename = path.basename(repo)

  // add check to see if basename already exists
  // maybe username should be added to basename
  // or maybe basename should be MD5 of repo?
  // ..not a big deal whatever

  var destination = dejaHome + '/' + basename

  var clone = spawn('git', ['clone', repo, destination])

  clone.on('exit', function(code) {

    // cycle through cloned repo making symlinks to home, promping if files exist when the symlink would otherwise go
    children = fs.readdirSync(destination)

    for(var index in children) {

      var file = children[index]
      if (file != '.git') {

        var symlinkPath = destination + '/' + file
        var filepath = home + '/' + file

        createSymlink(symlinkPath, filepath)
      }
    }
  })
}

function createSymlink(symlinkPath, filepath) {

  path.exists(filepath, function(exists) {

    if (!exists) {

      sys.puts(symlinkPath + ' -> ' + filepath)

      spawn('ln', ['-s', symlinkPath, filepath])
    }
    else {

      sys.puts('Skipped ' + filepath + ': already exists.')
    }
  })
}
